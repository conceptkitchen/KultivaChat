I understand this is very frustrating, and I apologize that the issue is persisting. It's clear that the problem is more complex than just keeping the process alive. When a setup like Gunicorn inside a screen session fails, it almost always means there is an underlying error either in the application itself or in how it's being started.
Let's switch from proposing solutions to diagnosing the root cause. We need to see the exact error message. Please follow these steps precisely and show me the output.
Diagnostic Step-by-Step
We will do this entirely within the screen session to see what's happening live.
1. Get Inside the screen Session
First, stop any old processes to ensure we start fresh.
killall gunicorn
killall python

Now, enter the session you created earlier. If it's not running, create a new one.
# Re-attach to the session
screen -r gunicorn_server

# OR, if that gives an error, create a new one
screen -S gunicorn_server

2. Navigate to Your Code
Once inside the screen session, go to your backend directory.
cd backend

3. Run Gunicorn and Look for Errors
This is the most important step. Run the Gunicorn command again, but this time, watch the output on your screen very carefully. Do not detach yet.
gunicorn --workers 1 --bind 0.0.0.0:8080 main_2:app

I've changed to --workers 1 for now. This makes the error log much cleaner for debugging.
What to look for:
 * Immediate Crash: Does the command run and then immediately exit, returning you to the command prompt (prompt>_ )? If so, there is a startup error.
 * Error Messages: Look for lines that contain [ERROR], Traceback (most recent call last):, ModuleNotFoundError, ImportError, or NameError.
Please copy the complete output you see after running the command and paste it in your reply.
4. If Gunicorn Appears to Run, Test it Locally
If Gunicorn starts and you see lines like [INFO] Starting gunicorn... and [INFO] Listening at: http://0.0.0.0:8080 and it does not crash, then we need to test if the application is actually working.
Open a second, separate terminal window (do not detach from your screen session yet) and run the following curl command:
curl -v http://127.0.0.1:8080

This command attempts to connect to your server from the machine it's running on. The -v (verbose) flag will give us detailed information about the connection attempt.
Now, please provide me with the output from these two places:
 * From Terminal 1 (the screen session): The full output from running the gunicorn command.
 * From Terminal 2 (the new window): The full output from the curl -v http://127.0.0.1:8080 command.
The error is hiding in that output. Once we see it, we can fix it.
